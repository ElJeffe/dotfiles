#!/usr/bin/env zsh

function precmd {
    # Set the right prompt
    if [ $? -ne 0 ]
    then
        RPROMPT="[${RED}%T${NORM}]"
    else
        RPROMPT="[${GREEN}%T${NORM}]"
    fi

    # set DCM ip address
    if [ $DCM_IP =~ "10\.48\.(.*)" ]
    then
      #[[ $DCM_IP -regex-match "10.*" ]]
      P_IP=" DCM:$PR_RED$match$PR_RESET"
    else
      P_IP=""
    fi
	
	# git
	git_ps1 () {
        if which git > /dev/null; then
            local g="$(git rev-parse --git-dir 2>/dev/null)"
            if [ -n "$g" ]; then
                local r
                local b
                if [ -d "$g/rebase-apply" ]; then
                    if test -f "$g/rebase-apply/rebasing"; then
                        r="|REBASE"
                    elif test -f "$g/rebase-apply/applying"; then
                        r="|AM"
                    else
                        r="|AM/REBASE"
                    fi
                    b="$(git symbolic-ref HEAD 2>/dev/null)"
                elif [ -f "$g/rebase-merge/interactive" ]; then
                    r="|REBASE-i"
                    b="$(cat "$g/rebase-merge/head-name")"
                elif [ -d "$g/rebase-merge" ]; then
                    r="|REBASE-m"
                    b="$(cat "$g/rebase-merge/head-name")"
                elif [ -f "$g/MERGE_HEAD" ]; then
                    r="|MERGING"
                    b="$(git symbolic-ref HEAD 2>/dev/null)"
                else
                    if [ -f "$g/BISECT_LOG" ]; then
                        r="|BISECTING"
                    fi
                    if ! b="$(git symbolic-ref HEAD 2>/dev/null)"; then
                       if ! b="$(git describe --exact-match HEAD 2>/dev/null)"; then
                          b="$(cut -c1-7 "$g/HEAD")..."
                       fi
                    fi
                fi
                if [ -n "$1" ]; then
                     printf "$1" "${b##refs/heads/}$r"
                else
                     printf "%s" "${b##refs/heads/}$r"
                fi
            fi
        else
            printf ""
        fi
    }

    GITBRANCH=" $(git_ps1)"
    if [ $GITBRANCH == " " ]; then
      GITBRANCH=""
    else
      GITBRANCH=" G:$GITBRANCH"
    fi

}

setprompt () {
    # Need this, so the prompt will work
    setopt prompt_subst

    # let's load colors into our environment, then set them
    autoload colors zsh/terminfo

    if [[ "$terminfo[colors]" -gt 7 ]]; then
        colors
    fi


    for COLOR in RED GREEN YELLOW WHITE BLACK BLUE; do
        eval PR_$COLOR='%{$fg[${(L)COLOR}]%}'
        eval PR_BRIGHT_$COLOR='%{$fg_bold[${(L)COLOR}]%}'
    done

    PR_RESET="%{$reset_color%}"
    
    HOSTCOLOR=$PR_BLUE
    case $UID in
      0)
        USERCOLOR=$PR_RED
        ;;
      *)
        USERCOLOR=$PR_GREEN
        ;;
    esac

    # Finally, let's set the prompt
    PROMPT='\
%# ${USERCOLOR}%n${PR_RESET}@${HOSTCOLOR}%m${PR_RESET}${P_IP}
%U%~%u%# '

}

setprompt
