#!/usr/bin/env zsh

function precmd {
    # Set the right prompt
    if [ $? -ne 0 ]
    then
      PATH_COLOR="$PR_RED"
    else
      PATH_COLOR="$PR_BLUE"
    fi

    # set DCM ip address
    if [[ $ZSH_VERSION == <5->.<->.<->* ||
          $ZSH_VERSION == 4.<4->.<->* ||
          $ZSH_VERSION == 4.<3->.<5->* ]]
    then
      if [ -z $DCM_IP ]
      then
        P_IP=""
      elif [ $DCM_IP =~ "10\.50\.(.*)" ]
      then
        #[[ $DCM_IP -regex-match "10.*" ]]
        P_IP=" DCM:$PR_RED$match$PR_RESET_BG"
      else
        P_IP=""
      fi
    fi
	
#	# git
#	git_ps1 () {
#        if which git > /dev/null; then
#            local g="$(git rev-parse --git-dir 2>/dev/null)"
#            if [ -n "$g" ]; then
#                local r
#                local b
#                if [ -d "$g/rebase-apply" ]; then
#                    if test -f "$g/rebase-apply/rebasing"; then
#                        r="|REBASE"
#                    elif test -f "$g/rebase-apply/applying"; then
#                        r="|AM"
#                    else
#                        r="|AM/REBASE"
#                    fi
#                    b="$(git symbolic-ref HEAD 2>/dev/null)"
#                elif [ -f "$g/rebase-merge/interactive" ]; then
#                    r="|REBASE-i"
#                    b="$(cat "$g/rebase-merge/head-name")"
#                elif [ -d "$g/rebase-merge" ]; then
#                    r="|REBASE-m"
#                    b="$(cat "$g/rebase-merge/head-name")"
#                elif [ -f "$g/MERGE_HEAD" ]; then
#                    r="|MERGING"
#                    b="$(git symbolic-ref HEAD 2>/dev/null)"
#                else
#                    if [ -f "$g/BISECT_LOG" ]; then
#                        r="|BISECTING"
#                    fi
#                    if ! b="$(git symbolic-ref HEAD 2>/dev/null)"; then
#                       if ! b="$(git describe --exact-match HEAD 2>/dev/null)"; then
#                          b="$(cut -c1-7 "$g/HEAD")..."
#                       fi
#                    fi
#                fi
#                if [ -n "$1" ]; then
#                     printf "$1" "${b##refs/heads/}$r"
#                else
#                     printf "%s" "${b##refs/heads/}$r"
#                fi
#            fi
#        else
#            printf ""
#        fi
#    }
#
#    GITBRANCH=" $(git_ps1)"
#    if [ $GITBRANCH == " " ]; then
#      GITBRANCH=""
#    else
#      GITBRANCH=" G:$GITBRANCH"
#    fi

}

setprompt () {
    # Need this, so the prompt will work
    setopt prompt_subst

    HOSTCOLOR=$PR_BLUE
    case $UID in
      0)
        USERCOLOR=$PR_BRIGHT_RED
        ;;
      *)
        USERCOLOR=$PR_BRIGHT_GREEN
        ;;
    esac
    PR_RESET_BG=$PR_RESET$PR_BG_WHITE$PR_BLACK
    # Finally, let's set the prompt
    PROMPT='${PR_RESET_BG}${PATH_COLOR}%U%~%u${PR_BLACK}%#${PR_RESET} '
    RPROMPT='${PR_RESET_BG}[%T ${USERCOLOR}%n${PR_RESET_BG}@${HOSTCOLOR}%m${PR_BLACK}${P_IP}]${PR_RESET}'
}

setprompt
